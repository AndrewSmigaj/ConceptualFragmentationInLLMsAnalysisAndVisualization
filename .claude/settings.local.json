{
  "permissions": {
    "allow": [
      "Bash(find:*)",
      "Bash(python:*)",
      "Bash(venv311/Scripts/python.exe -m:*)",
      "Bash(git add:*)",
      "Bash(git commit:*)",
      "Bash(git push:*)",
      "Bash(ls:*)",
      "Bash(source:*)",
      "Bash(dos2unix:*)",
      "Bash(pip3 install:*)",
      "Bash(apt-get:*)",
      "Bash(mkdir:*)",
      "Bash(mv:*)",
      "Bash(./venv311/Scripts/python tests/test_cross_layer_dashboard.py)",
      "Bash(pip install:*)",
      "Bash(cat:*)",
      "Bash(grep:*)",
      "Bash(cp:*)",
      "Bash(rg:*)",
      "Bash(chmod:*)",
      "Bash(/mnt/c/Repos/ConceptualFragmentationInLLMsAnalysisAndVisualization/venv311/Scripts/python.exe /mnt/c/Repos/ConceptualFragmentationInLLMsAnalysisAndVisualization/run_visualizations.py --datasets titanic --seeds 0 --static_only)",
      "Bash(/usr/bin/python3:*)",
      "Bash(rm:*)",
      "Bash(/mnt/c/Repos/ConceptualFragmentationInLLMsAnalysisAndVisualization/venv311/Scripts/python.exe run_cluster_paths.py --help)",
      "Bash(/mnt/c/Repos/ConceptualFragmentationInLLMsAnalysisAndVisualization/venv311/Scripts/python.exe run_cluster_paths.py --dataset titanic --seed 0 --max_k 10 --compute_similarity --config_id baseline --use_cached_clusters)",
      "Bash(/mnt/c/Repos/ConceptualFragmentationInLLMsAnalysisAndVisualization/venv311/Scripts/python.exe run_cluster_paths.py --dataset heart --seed 0 --max_k 10 --compute_similarity --config_id baseline --use_cached_clusters)",
      "Bash(/mnt/c/Repos/ConceptualFragmentationInLLMsAnalysisAndVisualization/venv311/Scripts/python.exe /mnt/c/Repos/ConceptualFragmentationInLLMsAnalysisAndVisualization/generate_paper_figures.py)",
      "Bash(/mnt/c/Repos/ConceptualFragmentationInLLMsAnalysisAndVisualization/venv311/Scripts/python.exe generate_paper_figures.py)",
      "Bash(/mnt/c/Repos/ConceptualFragmentationInLLMsAnalysisAndVisualization/venv311/Scripts/python.exe llm_analysis_example.py --dataset both)",
      "Bash(/mnt/c/Repos/ConceptualFragmentationInLLMsAnalysisAndVisualization/venv311/Scripts/python.exe llm_analysis_example.py --dataset titanic --seed 0 --provider grok)",
      "Bash(/mnt/c/Repos/ConceptualFragmentationInLLMsAnalysisAndVisualization/venv311/Scripts/python.exe llm_analysis_example.py --dataset heart --seed 0 --provider grok)",
      "Bash(zip:*)",
      "Bash(tar:*)",
      "Bash(/mnt/c/Repos/ConceptualFragmentationInLLMsAnalysisAndVisualization/venv311/Scripts/python.exe generate_labeled_paths_figure.py)",
      "Bash(/mnt/c/Repos/ConceptualFragmentationInLLMsAnalysisAndVisualization/venv311/Scripts/python.exe generate_heart_metrics_charts.py)",
      "Bash(/mnt/c/Repos/ConceptualFragmentationInLLMsAnalysisAndVisualization/venv311/Scripts/python.exe test_path_metrics.py)",
      "Bash(/mnt/c/Repos/ConceptualFragmentationInLLMsAnalysisAndVisualization/venv311/Scripts/python.exe update_dashboard.py)",
      "Bash(/mnt/c/Repos/ConceptualFragmentationInLLMsAnalysisAndVisualization/venv311/Scripts/python.exe -c \"with open('visualization/dash_app.py', 'r', encoding='utf-8') as f: print('File length:', len(f.readlines())); print('First few and last few lines...'); f.seek(0); lines = f.readlines(); print(''.join(lines[:20])); print('...'); print(''.join(lines[-20:]))\")",
      "Bash(/mnt/c/Repos/ConceptualFragmentationInLLMsAnalysisAndVisualization/venv311/Scripts/python.exe manual_dashboard_update.py)",
      "Bash(/mnt/c/Repos/ConceptualFragmentationInLLMsAnalysisAndVisualization/venv311/Scripts/python.exe -c \"import sys; sys.path.append('.'); print('Checking imports...'); from visualization import dash_app; print('Successfully imported dash_app'); print('Checking for path_metrics_tab in dash_app...'); 'path_metrics_tab' in dir(dash_app) and print('path_metrics_tab imported successfully')\")",
      "Bash(./run_dashboard.bat)",
      "Bash(wget:*)",
      "Bash(venv311/Scripts/python.exe test_gpt2_persistence.py)",
      "Bash(venv311/Scripts/python.exe test_integration_tests.py:*)",
      "Bash(venv311/Scripts/python.exe run_integration_tests.py:*)",
      "Bash(./venv311/Scripts/activate)",
      "Bash(./venv311/Scripts/python.exe -m pip install transformers torch)",
      "Bash(./venv311/Scripts/python.exe gpt2_activation_extractor.py)",
      "Bash(./venv311/Scripts/python.exe gpt2_pivot_clusterer.py)",
      "Bash(./venv311/Scripts/python.exe gpt2_apa_metrics.py)",
      "Bash(./venv311/Scripts/python.exe:*)",
      "Bash(./venv311/Scripts/python test_enhanced_clusterer.py)",
      "Bash(tree:*)",
      "Bash(diff:*)",
      "Bash(./venv311/Scripts/pip.exe list)",
      "Bash(/mnt/c/Repos/ConceptualFragmentationInLLMsAnalysisAndVisualization/venv311/Scripts/python.exe gpt2_semantic_subtypes_experiment.py)",
      "Bash(/mnt/c/Repos/ConceptualFragmentationInLLMsAnalysisAndVisualization/venv311/Scripts/python.exe gpt2_semantic_subtypes_experiment.py --help)",
      "Bash(/mnt/c/Repos/ConceptualFragmentationInLLMsAnalysisAndVisualization/venv311/Scripts/python.exe gpt2_semantic_subtypes_experiment.py --words-file data/gpt2_semantic_subtypes_curated.json)",
      "Bash(/mnt/c/Repos/ConceptualFragmentationInLLMsAnalysisAndVisualization/venv311/Scripts/python.exe complete_analysis.py)",
      "Bash(/mnt/c/Repos/ConceptualFragmentationInLLMsAnalysisAndVisualization/venv311/Scripts/python.exe -c \"import scipy; print(f'scipy version: {scipy.__version__}')\")",
      "Bash(../../../venv311/Scripts/python.exe complete_analysis_enhanced.py:*)",
      "Bash(timeout:*)",
      "Bash(../../../venv311/Scripts/python.exe:*)",
      "Bash(/mnt/c/Repos/ConceptualFragmentationInLLMsAnalysisAndVisualization/venv311/Scripts/python.exe -c \"\nfrom visualization.unified_visualizer import UnifiedVisualizer\nprint('✓ UnifiedVisualizer imports successfully')\nprint('✓ Methods available:', [m for m in dir(UnifiedVisualizer) if not m.startswith('_')])\n\")",
      "Bash(/mnt/c/Repos/ConceptualFragmentationInLLMsAnalysisAndVisualization/venv311/Scripts/python.exe -c \"\nfrom pathlib import Path\nfrom visualization.unified_visualizer import UnifiedVisualizer\nprint(''✓ UnifiedVisualizer imports successfully'')\nvis = UnifiedVisualizer(Path(''test_output''))\nprint(''✓ UnifiedVisualizer instantiated'')\nmethods = [m for m in dir(vis) if not m.startswith(''_'') and callable(getattr(vis, m))]\nprint(f''✓ Available methods ({len(methods)}): {methods[:3]}...'')\n\")",
      "Bash(/mnt/c/Repos/ConceptualFragmentationInLLMsAnalysisAndVisualization/venv311/Scripts/python.exe -c \"\nfrom pathlib import Path\nfrom visualization.unified_visualizer import UnifiedVisualizer\nprint(''SUCCESS: UnifiedVisualizer imports successfully'')\nvis = UnifiedVisualizer(Path(''test_output''))\nprint(''SUCCESS: UnifiedVisualizer instantiated'')\nmethods = [m for m in dir(vis) if not m.startswith(''_'') and callable(getattr(vis, m))]\nprint(f''SUCCESS: Available methods: {len(methods)}'')\nfor m in methods[:5]:\n    print(f''  - {m}'')\n\")",
      "Bash(venv311/Scripts/python.exe experiments/heart_disease/generate_heart_trajectory_viz.py)",
      "Bash(jq:*)",
      "Bash(sudo dpkg:*)",
      "Bash(sudo apt-get install:*)",
      "Bash(/mnt/c/Repos/ConceptualFragmentationInLLMsAnalysisAndVisualization/venv311/Scripts/python.exe -m subprocess run pdflatex -interaction=nonstopmode main.tex)",
      "Bash(/mnt/c/Repos/ConceptualFragmentationInLLMsAnalysisAndVisualization/venv311/Scripts/python.exe cluster_all_tokens_per_layer.py)",
      "Bash(kill:*)",
      "Bash(venv311/Scripts/python.exe experiments/gpt2/all_tokens/cluster_top_10k_k3.py)",
      "Bash(./venv311/Scripts/pip.exe install dash-bootstrap-components==1.5.0 dash-uploader==0.6.0)"
    ],
    "deny": []
  },
  "enableAllProjectMcpServers": false
}